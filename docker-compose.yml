version: '3.8'

services:
  # Database Service (PostgreSQL)
  db:
    image: postgres:14
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=hydro_db
      - POSTGRES_USER=hydro_user
      - POSTGRES_PASSWORD=hydro_pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hydro_user -d hydro_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Service
  redis:
    image: redis:6-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servicio de MLflow Tracking Server
  mlflow:
    image: python:3.11-slim
    volumes:
      - mlflow_data:/mlflow
    ports:
      - "5000:5000"
    environment:
      - BACKEND_STORE_URI=sqlite:///mlflow/mlflow.db
      - DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    command: >
      bash -c "
        pip install mlflow==2.22.1 &&
        mkdir -p /mlflow/artifacts &&
        mlflow server 
          --backend-store-uri sqlite:///mlflow/mlflow.db 
          --default-artifact-root /mlflow/artifacts 
          --host 0.0.0.0 
          --port 5000
      "

  # Servicio de la Aplicaci√≥n Web (Django)
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=hydro_db
      - POSTGRES_USER=hydro_user
      - POSTGRES_PASSWORD=hydro_pass
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - db
      - redis
      - mlflow

  # Servicio del Trabajador de Celery
  worker:
    build: .
    command: celery -A hydroML worker -l info
    volumes:
      - .:/app
    environment:
      - POSTGRES_NAME=hydro_db
      - POSTGRES_USER=hydro_user
      - POSTGRES_PASSWORD=hydro_pass
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - db
      - redis
      - mlflow

volumes:
  postgres_data:
  mlflow_data: