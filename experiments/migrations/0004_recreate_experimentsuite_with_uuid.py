# Generated by Django 5.2.4 on 2025-08-16 01:56

from django.db import migrations, models
import django.db.models.deletion
import uuid


def recreate_experimentsuite_table(apps, schema_editor):
    """
    Drop and recreate the ExperimentSuite table with UUID primary key
    """
    # Drop the old table
    schema_editor.execute("DROP TABLE IF EXISTS experiments_experimentsuite CASCADE;")


class Migration(migrations.Migration):

    dependencies = [
        ('experiments', '0003_add_mlflow_run_id'),
        ('projects', '0001_initial'),
    ]

    operations = [
        # First, drop the old table
        migrations.RunPython(recreate_experimentsuite_table, migrations.RunPython.noop),
        
        # Then create the new table with UUID
        migrations.CreateModel(
            name='ExperimentSuite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the experiment suite', max_length=255)),
                ('description', models.TextField(default='', help_text='Detailed description of the experiment suite')),
                ('study_type', models.CharField(choices=[('HYPERPARAMETER_SWEEP', 'Hyperparameter Sweep'), ('ABLATION_STUDY', 'Ablation Study'), ('ARCHITECTURE_SEARCH', 'Architecture Search'), ('ENSEMBLE_STUDY', 'Ensemble Study'), ('CROSS_VALIDATION', 'Cross Validation'), ('CUSTOM', 'Custom')], default='HYPERPARAMETER_SWEEP', help_text='Type of multi-experiment study', max_length=50)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('RUNNING', 'Running'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', help_text='Current status of the experiment suite', max_length=20)),
                ('optimization_metric', models.CharField(choices=[('r2_score', 'RÂ² Score'), ('mean_squared_error', 'Mean Squared Error'), ('mean_absolute_error', 'Mean Absolute Error'), ('root_mean_squared_error', 'Root Mean Squared Error'), ('accuracy', 'Accuracy'), ('precision', 'Precision'), ('recall', 'Recall'), ('f1_score', 'F1 Score'), ('roc_auc', 'ROC AUC'), ('log_loss', 'Log Loss'), ('custom', 'Custom Metric')], default='r2_score', help_text='Primary metric to optimize during the study', max_length=50)),
                ('search_space', models.JSONField(default=dict, help_text='Configuration for the hyperparameter search space')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the suite was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the suite was last updated')),
                ('started_at', models.DateTimeField(blank=True, help_text='When the suite execution started', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the suite execution completed', null=True)),
                ('base_experiment', models.ForeignKey(blank=True, help_text='Base experiment that serves as template for the suite', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='derived_suites', to='experiments.mlexperiment')),
                ('project', models.ForeignKey(help_text='Project this suite belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='experiment_suites', to='projects.project')),
            ],
            options={
                'verbose_name': 'Experiment Suite',
                'verbose_name_plural': 'Experiment Suites',
                'db_table': 'experiments_experimentsuite',
                'ordering': ['-created_at'],
            },
        ),
        
        # Add the suite field to MLExperiment
        migrations.AddField(
            model_name='mlexperiment',
            name='suite',
            field=models.ForeignKey(blank=True, help_text='Experiment suite this experiment belongs to (if any)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='experiments.experimentsuite'),
        ),
        
        # Add indexes
        migrations.AddIndex(
            model_name='experimentsuite',
            index=models.Index(fields=['project', 'status'], name='experiments_project_aa6f1c_idx'),
        ),
        migrations.AddIndex(
            model_name='experimentsuite',
            index=models.Index(fields=['study_type', 'status'], name='experiments_study_t_d29b55_idx'),
        ),
        migrations.AddIndex(
            model_name='experimentsuite',
            index=models.Index(fields=['created_at'], name='experiments_created_17ea29_idx'),
        ),
        
        # Add constraint
        migrations.AddConstraint(
            model_name='experimentsuite',
            constraint=models.CheckConstraint(check=models.Q(('optimization_metric__isnull', False)), name='experiments_experimentsuite_optimization_metric_required'),
        ),
    ]
