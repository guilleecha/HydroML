# Generated by Django 5.2.4 on 2025-08-16 02:08

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('experiments', '0004_recreate_experimentsuite_with_uuid'),
        ('projects', '0003_datasource_quality_report_path'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='mlexperiment',
            options={'ordering': ['-created_at'], 'verbose_name': 'ML Experiment', 'verbose_name_plural': 'ML Experiments'},
        ),
        migrations.RemoveConstraint(
            model_name='experimentsuite',
            name='experiments_experimentsuite_optimization_metric_required',
        ),
        migrations.AddField(
            model_name='mlexperiment',
            name='forked_from',
            field=models.ForeignKey(blank=True, help_text='Reference to the original experiment if this is a fork.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forks', to='experiments.mlexperiment'),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='base_experiment',
            field=models.ForeignKey(blank=True, help_text='The template experiment that serves as the baseline for the suite.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='derived_suites', to='experiments.mlexperiment'),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='completed_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the suite execution finished.', null=True),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when the suite was created.'),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the experiment suite using UUID4 format.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='name',
            field=models.CharField(help_text='Human-readable name for the experiment suite.', max_length=200),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='optimization_metric',
            field=models.CharField(default='r2_score', help_text="The target metric to optimize (e.g., 'r2_score', 'accuracy', 'f1_score').", max_length=50),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='project',
            field=models.ForeignKey(help_text='The project that owns this experiment suite.', on_delete=django.db.models.deletion.CASCADE, related_name='experiment_suites', to='projects.project'),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='search_space',
            field=models.JSONField(default=dict, help_text='JSON definition of parameters, algorithms, or features to explore in the study.'),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='started_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the suite execution began.', null=True),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='status',
            field=models.CharField(choices=[('DRAFT', 'Borrador'), ('QUEUED', 'En Cola'), ('RUNNING', 'En Ejecución'), ('COMPLETED', 'Completado'), ('FAILED', 'Falló'), ('CANCELLED', 'Cancelado')], default='DRAFT', help_text='Current execution status of the experiment suite.', max_length=20),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='study_type',
            field=models.CharField(choices=[('HYPERPARAMETER_SWEEP', 'Barrido de Hiperparámetros'), ('ABLATION_STUDY', 'Estudio de Ablación'), ('ALGORITHM_COMPARISON', 'Comparación de Algoritmos'), ('FEATURE_SELECTION', 'Selección de Características'), ('CROSS_VALIDATION', 'Validación Cruzada')], default='HYPERPARAMETER_SWEEP', help_text='The type of multi-experiment study being conducted.', max_length=30),
        ),
        migrations.AlterField(
            model_name='experimentsuite',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when the suite was last modified.'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='artifact_paths',
            field=models.JSONField(blank=True, default=dict, help_text='File paths to generated artifacts like trained models and datasets.', null=True),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, help_text='Timestamp when the experiment was created.'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='description',
            field=models.TextField(blank=True, help_text="Optional detailed description of the experiment's purpose and methodology.", null=True),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='feature_set',
            field=models.JSONField(default=list, help_text='List of column names to use as features for model training.'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='hyperparameters',
            field=models.JSONField(blank=True, help_text='Dictionary of hyperparameters specific to the chosen model.', null=True),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the experiment using UUID4 format.', primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='input_datasource',
            field=models.ForeignKey(help_text='The datasource containing the training and testing data.', on_delete=django.db.models.deletion.CASCADE, related_name='experiments_as_input', to='projects.datasource'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Whether this experiment is visible to other users.'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='mlflow_run_id',
            field=models.CharField(blank=True, help_text='MLflow run identifier for experiment tracking integration.', max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='model_name',
            field=models.CharField(help_text="Identifier of the ML algorithm to use (e.g., 'RandomForestRegressor').", max_length=100),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='name',
            field=models.CharField(help_text='Human-readable name for the experiment.', max_length=255),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='parent_experiment',
            field=models.ForeignKey(blank=True, help_text='Reference to the original experiment if this is a new version.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='versions', to='experiments.mlexperiment'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='project',
            field=models.ForeignKey(help_text='The project that owns this experiment.', on_delete=django.db.models.deletion.CASCADE, related_name='experiments', to='projects.project'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='published_at',
            field=models.DateTimeField(blank=True, help_text='Timestamp when the experiment was made public.', null=True),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='results',
            field=models.JSONField(blank=True, default=dict, help_text='Stored experiment results including metrics and evaluation data.', null=True),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='split_random_state',
            field=models.IntegerField(default=42, help_text='Random seed for reproducible train/test data splitting.'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='split_strategy',
            field=models.CharField(choices=[('RANDOM', 'Aleatorio'), ('TIMESERIES', 'Serie Temporal')], default='RANDOM', help_text='Strategy used for splitting data into training and testing sets.', max_length=20),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='status',
            field=models.CharField(choices=[('DRAFT', 'Borrador'), ('RUNNING', 'En Ejecución'), ('FINISHED', 'Finalizado'), ('ANALYZED', 'Analizado'), ('PUBLISHED', 'Publicado'), ('ERROR', 'Error')], default='DRAFT', help_text='Current state of the experiment in its lifecycle.', max_length=20),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='suite',
            field=models.ForeignKey(blank=True, help_text='The experiment suite this experiment belongs to, if any.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='experiments', to='experiments.experimentsuite'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='target_column',
            field=models.CharField(help_text='Name of the column to be predicted (target variable).', max_length=100),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='test_split_size',
            field=models.FloatField(default=0.2, help_text='Proportion of data reserved for testing (e.g., 0.2 = 20%).'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='Timestamp when the experiment was last modified.'),
        ),
        migrations.AlterField(
            model_name='mlexperiment',
            name='version',
            field=models.PositiveIntegerField(default=1, help_text='Version number for experiment iterations and comparisons.'),
        ),
        migrations.AddIndex(
            model_name='mlexperiment',
            index=models.Index(fields=['status', 'created_at'], name='experiments_status_2e0ab0_idx'),
        ),
        migrations.AddIndex(
            model_name='mlexperiment',
            index=models.Index(fields=['project', 'version'], name='experiments_project_e5e0f2_idx'),
        ),
        migrations.AddIndex(
            model_name='mlexperiment',
            index=models.Index(fields=['is_public', 'published_at'], name='experiments_is_publ_3abf53_idx'),
        ),
        migrations.AddConstraint(
            model_name='experimentsuite',
            constraint=models.CheckConstraint(condition=models.Q(('optimization_metric__isnull', False), models.Q(('optimization_metric', ''), _negated=True)), name='experiments_experimentsuite_optimization_metric_required'),
        ),
        migrations.AlterModelTable(
            name='experimentsuite',
            table=None,
        ),
    ]
